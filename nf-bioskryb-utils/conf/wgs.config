common_resource_labels = [
    pipeline_user                : params.pipeline_user,
    basejumper_organization_name : params.basejumper_organization_name,
    basejumper_workspace_name    : params.basejumper_workspace_name,
    basejumper_project_name      : params.basejumper_project_name,
    pipeline_name                : params.pipeline_name,
    basejumper_organization_uuid : params.basejumper_organization_uuid,
    basejumper_workspace_uuid    : params.basejumper_workspace_uuid,
    basejumper_project_uuid      : params.basejumper_project_uuid,
    basejumper_pipeline_uuid     : params.basejumper_pipeline_uuid,
    pipeline_biosample_count     : params.pipeline_biosample_count
]

process {
    
    withName: 'SENTIEON_DRIVER_METRICS' {
        queue = { params.architecture == 'arm' ? 'intense-arm-spot' : 'intense-spot' }
        container = {
            params.architecture == 'arm' ? 'public.ecr.aws/v2u5x5f1/basejumper:sentieon-arm-202308-01'
            : 'public.ecr.aws/v2u5x5f1/basejumper:sentieon-202308-01-1'
        }
        cpus        = 64
        memory      = 123.GB
        time        = 5.h
        resourceLabels = common_resource_labels + [
            pipeline_process_name : "SENTIEON_DRIVER_METRICS"
        ]
    }
    
    withName: 'CUSTOM_DATA_PROCESSING' {
        queue       = { task.attempt <= 2 ? 'small-spot' : 'small-ondemand' }
        container = "public.ecr.aws/v2u5x5f1/basejumper:custom_wgs_0.14"
        cpus        = 2
        memory      = 7.GB
        time        = 5.h
        resourceLabels = common_resource_labels + [
            pipeline_process_name : "CUSTOM_DATA_PROCESSING"
        ]
    }
        
    withName: 'CUSTOM_REPORT' {
        queue       = { task.attempt > 1 ? 'large-spot' : 'small-spot' }
        container = "public.ecr.aws/v2u5x5f1/basejumper:custom_wgs_0.16"
        cpus        = { 2 * task.attempt }
        memory      = { 7.GB * task.attempt }
        time        = 1.h
        resourceLabels = common_resource_labels + [
            pipeline_process_name : "CUSTOM_REPORT"
        ]
    }

    withName: 'MULTIQC' {
        queue       = 'large-ondemand'
        container   = "quay.io/biocontainers/multiqc:1.28--pyhdfd78af_0"
        errorStrategy = { task.attempt <=2 ? 'retry' : 'terminate' }
        cpus        = { 8 * task.attempt }
        memory      = { 30.GB * task.attempt }
        time        = { 5.h }
        resourceLabels = common_resource_labels + [
            pipeline_process_name : "MULTIQC"
        ]
    }
}
